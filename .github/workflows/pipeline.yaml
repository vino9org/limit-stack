name: Pipeline

on:
  push:
    branches:
      - 'develop'
      - 'feature**'
  delete:
    branches:
      - 'feature**'

env:
  AWS_DEFAULT_REGION: us-west-2
  TESTING_STACK_NAME: LimitsStack

jobs:
  start:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - run: |
          ls -l 

  build-test-deploy:
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: setup local dynamo db
        uses: rrainn/dynamodb-action@v2.0.1
        with:
          port: 8000
          cors: '*'

      - name: unit tests
        run: |
          pip install -r runtime/requirements.txt --target=runtime/.
          pip install -r requirements.txt
          pytest tests/unit
        env: 
          LOCAL_DYNAMODB_URL: http://localhost:8000
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}

      - name: deploy feature stack
        run: |
          npm install -g aws-cdk 
          cdk deploy --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_DEFAULT_REGION }}
          TESTING_STACK_NAME: ${{ github.event.ref }}

  delete-feature-stack:
    if: startsWith(github.event.ref, 'feature') && github.event_name == 'delete'
    runs-on: ubuntu-latest
    needs: [start]
    steps:
      - uses: actions/checkout@v2

      - name: delete feature stack
        run: |
          npm install -g aws-cdk 
          cdk destory
        env: 
          TESTING_STACK_NAME: ${{ github.event.ref }}

  integration-tests:
    if: startsWith(github.ref, 'refs/heads/develop')
    needs: [build-test-deploy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: integration tests
        run: |
          pip install -r requirements.txt
          pytest tests/integration
        env: 
          TESTING_STACK_NAME: ${{ env.TESTING_STACK_NAME }}

