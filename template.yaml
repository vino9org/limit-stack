AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  limits

  SAM Template for limits management module

Globals:
  Function:
    Timeout: 3

Parameters:
  AccessTokenIssuer:
    Type: String
    Default: "https://cognito-idp.us-west-2.amazonaws.com/us-west-2_8GAesOyAi"
    Description: "Issuer of JWT access token"
  AccessTokenAudiences:
    Type: CommaDelimitedList
    Default: "7c5du41sie2eoh4m4025sldcah"
    Description: "Audiences in JWT access token"
  DefaultLogLevel:
    Type: String
    Default: "debug"
    Description: "Default log level"
  EnvironmentName:
    Type: String
    Default: "dev1"
    Description: "Deploy environment name"

Resources:
  LimitFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambda_handler
      Layers:
        - !Sub "arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPython:10"
        - !Sub "arn:aws:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension:16"
      Policies:
        - CloudWatchLambdaInsightsExecutionRolePolicy
      Runtime: python3.9
      Architectures:
        - x86_64
      Tracing: "PassThrough"
      Events:
        LimitApiGatway:
          Type: HttpApi
          Properties:
            ApiId: !Ref LimitApi
            Path: /customers/11223344/limits
            Method: any
        LimitEvent:
          Type: CloudWatchEvent 
          Properties:
            Pattern:
              source:
                - service.fund_transfer
              detail-type: 
                - transfer
              detail:
                status: 
                  - "completed"      
      Environment:
        Variables: 
          APP_TABLE_NAME: !Ref LimitTable
          # value below will go into log otuput, metrics and trace
          POWERTOOLS_METRICS_NAMESPACE: VinoBank
          POWERTOOLS_SERVICE_NAME: vinobank-limits
          LOG_LEVEL: 
            Ref: DefaultLogLevel
          DEPLOY_ENV:
            Ref: EnvironmentName
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LimitTable

  LimitApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: LimitApiAuthorizer
        Authorizers:
          LimitApiAuthorizer:
            AuthorizationScopes:
              -  "aws.cognito.signin.user.admin"
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              audience: 
                Ref: AccessTokenAudiences
              issuer: 
                Ref: AccessTokenIssuer

  LimitTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: customer_id
          AttributeType: S
        - AttributeName: request_id
          AttributeType: S
      KeySchema:
        - AttributeName: customer_id
          KeyType: HASH
        - AttributeName: request_id
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: delete_at
        Enabled: True


Outputs:
  LimitApiUrl:
    Description: "API Gateway(V2) endpoint URL for Limit Management function"
    Value: !Sub "https://${LimitApi}.execute-api.${AWS::Region}.amazonaws.com"
  LimitFunction:
    Description: "Limit Management Lambda Function ARN"
    Value: !GetAtt LimitFunction.Arn
  LimitFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt LimitFunctionRole.Arn
  DynamoDbTable:
    Value: !Ref LimitTable
    Description: DynamoDb Table that stores customer limit data

### doc links for reference
#
# More info about Globals:
#     https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
#
# More info about Function Resource:
#     https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
#
# More info about API Event Source:
#     https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
#
# Read more about SAM Policy templates at:
#     https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
#
